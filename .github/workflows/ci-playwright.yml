name: CI (Playwright) Build & Tests

on:
  push:
    branches: [ '**' ]
  pull_request:
    branches: [ '**' ]
  workflow_dispatch:

jobs: 
  build-and-test:
    timeout-minutes: 60
    runs-on: ubuntu-latest

    strategy:
      matrix:
        # Add project names here
        project: [ Playwright.SauceDemo ]

    steps:
    - uses: actions/checkout@v4

    # Builds project docker image since Playwright does not have official image for .NET
    - name: Build docker image
      run: |
        cd ${{ matrix.project }}
        docker build -t pw-project-image .

    # Run UI tests when pushing to feature branch
    - name: Run ${{ matrix.project }} - UI tests
      if: github.ref != 'refs/heads/main'
      run: |
        docker run --rm \
          -v ${{ github.workspace }}/Reports:/src/Reports \
          pw-project-image \
          dotnet test /src/${{ matrix.project }}.csproj \
            --filter Category=UI \
            --no-build \
            --configuration Release \
            --logger "trx;LogFileName=${{ matrix.project }}_UI_Results.trx"

    # Run E2E tests when merging to main branch
    - name: Run ${{ matrix.project }} - E2E tests
      if: github.ref == 'refs/heads/main'
      run: |
        docker run --rm \
          -v ${{ github.workspace }}/Reports:/src/Reports \
          pw-project-image \
          dotnet test /src/${{ matrix.project }}.csproj \
            --filter Category=E2E \
            --no-build \
            --configuration Release \
            --logger "trx;LogFileName=${{ matrix.project }}_E2E_Results.trx"

    # Upload test results for each project
    - name: Upload ${{ matrix.project }} test report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.project }} - Report
        path: Reports/